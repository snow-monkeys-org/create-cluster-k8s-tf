name: Deploy in cluster kubernetes

on:
  workflow_call:
    inputs:
      cloud-provider:
        required: true
        type: string
      name:
        required: true
        type: string
      node-size:
        required: false
        type: string
        default: 'g4s.kube.medium'
      node-count:
        required: false
        type: number
        default: 2
      apps:
        required: false
        type: string
        default: 'argocd'
      destroy:
        required: false
        type: boolean
        default: false
      organization:
        required: true
        type: string
      workspace:
        required: true
        type: string
      region:
        required: false
        type: string
        default: 'NYC1'
    secrets:
      civo-token:
        required: true
      github-token:
        required: false
      snow-token:
        required: false
      tf_api-token:
        required: true
    outputs:
      load_balancer_ip:
        description: 'Load balancer IP address from CIVO'
        value: ${{ jobs.create-civo-with-cluster.outputs.load_balancer_ip }}
     
   
jobs:

  notify-snow-monkeys-dashboard: 
    runs-on: ubuntu-22.04
    steps:

      - uses: actions/checkout@v4

      # setup terraform environment
      - name: Get organization id
        if: ${{ ! inputs.destroy }}
        run: |
          echo "----- get organization id -----"
          LIST=$(curl -X GET \
          -H "Authorization: Bearer ${{ secrets.tf_api-token }}" \
          -H "Content-Type: application/vnd.api+json" \
          https://app.terraform.io/api/v2/organizations/${{ inputs.organization }}/workspaces)
          echo $LIST
          WORKSPACE_ID=$(echo "$LIST" | jq -r '.data[] | select(.attributes.name == "k8s-civo") | .id')
          echo $WORKSPACE_ID
 
      
      - name: Setting civo variable to terraform cloud
        if: ${{ ! inputs.destroy }}
        run: |
          echo "----- setting variables to terraform cloud civo-token sensitive - $WORKSPACE_ID-----"
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.tf_api-token }}" \
          -H "Content-Type: application/vnd.api+json" \
          -d "{\"data\": { \"type\": \"vars\",  \"attributes\": { \"key\":\"TF_VAR_civo-token\", \"value\": \"${{secrets.civo-token}}\", \"description\": \"civo token\", \
          \"category\": \"terraform\", \"hcl\": false, \"sensitive\": true }}}" \
          https://app.terraform.io/api/v2/workspaces/$WORKSPACE_ID/vars

      - name: Setting name variable to terraform cloud
        if: ${{ ! inputs.destroy }}
        run: |
          echo "----- setting variables to terraform cloud civo-token sensitive -----"
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.tf_api-token }}" \
          -H "Content-Type: application/vnd.api+json" \
          -d "{\"data\": { \"type\": \"vars\",  \"attributes\": { \"key\":\"TF_VAR_name\", \"value\": \"${{inputs.name}}\", \"description\": \"civo token\", \
          \"category\": \"terraform\", \"hcl\": false, \"sensitive\": false }}}" \
          https://app.terraform.io/api/v2/workspaces/$WORKSPACE_ID/vars
      
      - name: Setting node-size variable to terraform cloud
        if: ${{ ! inputs.destroy }}
        run: |
          echo "----- setting variables to terraform cloud civo-token sensitive -----"
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.tf_api-token }}" \
          -H "Content-Type: application/vnd.api+json" \
          -d "{\"data\": { \"type\": \"vars\",  \"attributes\": { \"key\":\"TF_VAR_node-size\", \"value\": \"${{inputs.node-size}}\", \"description\": \"civo token\", \
          \"category\": \"terraform\", \"hcl\": false, \"sensitive\": false }}}" \
          https://app.terraform.io/api/v2/workspaces/$WORKSPACE_ID/vars
      
      - name: Setting node-count variable to terraform cloud
        if: ${{ ! inputs.destroy }}
        run: |
          echo "----- setting variables to terraform cloud civo-token sensitive -----"
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.tf_api-token }}" \
          -H "Content-Type: application/vnd.api+json" \
          -d "{\"data\": { \"type\": \"vars\",  \"attributes\": { \"key\":\"TF_VAR_node-count\", \"value\": \"${{inputs.node-count}}\", \"description\": \"civo token\", \
          \"category\": \"terraform\", \"hcl\": false, \"sensitive\": false }}}" \
          https://app.terraform.io/api/v2/workspaces/$WORKSPACE_ID/vars




#      - uses: snow-monkeys-org/create-cluster-k8s-tf/.github/actions/setup-terraform-cloud@main
#        with:
#          organization: ${{ inputs.organization }}
#          workspace: ${{ inputs.workspace }}
#          tf_api-token: ${{ secrets.tf_api-token }}
#          civo-token: ${{ secrets.civo-token }}


      # 
      # add variables to terraform cloud

      - name: Notify
        run: echo "notify snow monkeys dashboard"
